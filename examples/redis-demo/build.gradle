
plugins {
    id "war"
    id 'eclipse'
    id 'idea'
    id "org.grails.grails-web"
    id "com.bertramlabs.asset-pipeline"
    id "org.grails.grails-gsp"
}

version = "0.1"
group = "com.example"
assets {
    minifyJs = true
    minifyCss = true
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations.configureEach {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if ((details.requested.group == 'org.codehaus.groovy' || details.requested.group == 'org.apache.groovy') && details.requested.name != 'groovy-bom') {
            String groovyVersion = findProperty('groovyVersion') ?: libs.versions.groovy.get()
            details.useTarget(group: 'org.apache.groovy', name: details.requested.name, version: groovyVersion)
            details.because "The dependency coordinates are changed in Apache Groovy 4, plus ensure version"
        }
    }
    resolutionStrategy.dependencySubstitution {
        substitute(module("org.codehaus.groovy:groovy-bom:3.0.8")).using(module("org.apache.groovy:groovy-bom:$groovyVersion"))
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-core:$grailsVersion"

    implementation "org.grails:grails-web-boot:$grailsVersion"
    implementation "org.grails:grails-logging:$grailsVersion"
    implementation "org.grails:grails-plugin-rest:$grailsVersion"
    implementation "org.grails:grails-plugin-databinding:$grailsVersion"
    implementation "org.grails:grails-plugin-i18n:$grailsVersion"
    implementation "org.grails:grails-plugin-services:$grailsVersion"
    implementation "org.grails:grails-plugin-url-mappings:$grailsVersion"
    implementation "org.grails:grails-plugin-interceptors:$grailsVersion"

    implementation "org.grails.plugins:cache:$cacheVersion"
    implementation "org.grails.plugins:async:$asyncVersion"
    implementation "org.grails.plugins:scaffolding:$scaffoldingVersion"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5:$grailHibernateVersion"
    implementation "org.hibernate:hibernate-core-jakarta:$hibernate5Version"
    implementation project(':grails-redis')
    implementation "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"

    runtimeOnly "org.glassfish.expressly:expressly:5.0.0"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"


    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

assets {
    minifyJs = true
    minifyCss = true
}

test {
    useJUnitPlatform()
}
